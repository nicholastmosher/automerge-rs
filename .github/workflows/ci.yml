name: CI

permissions:
  contents: read

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.task.name }} - ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable, beta, nightly]
        node: ['12']
        task:
          - name: Format Clippy and Docs
            script: |
              cargo fmt --all -- --check
              cargo clippy --all-targets --all-features -- -D warnings
              cargo doc --workspace --all-features
          - name: Build and Test
            script: |
              cargo build --all-targets --workspace
              cargo test --workspace
          - name: Wasm and Interop
            script: |
              wasm-pack test --node automerge-frontend
              cd automerge-backend-wasm
              yarn dev
              yarn test:js
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      # Caching for Rust
      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.rust }}-${{ matrix.task.name }}

      - name: Rust ${{ matrix.rust }} - ${{ matrix.task.name }}
        run: ${{ matrix.task.script }}
